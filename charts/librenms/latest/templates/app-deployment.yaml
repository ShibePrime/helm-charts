apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.version: 1.16.0 (0c01309)
    traefik.backend: librenms
    traefik.enable: "true"
    traefik.frontend.rule: Host:.
    traefik.port: "80"
  creationTimestamp: null
  labels:
    io.kompose.service: app
  name: app
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: app
    spec:
      containers:
      - env:
        - name: DB_HOST
          value: db
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: MYSQL_DATABASE
              name: app-librenms-env
        - name: DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: MYSQL_PASSWORD
              name: app-librenms-env
        - name: DB_TIMEOUT
          value: "30"
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              key: MYSQL_USER
              name: app-librenms-env
        - name: LIBRENMS_CRON_ALERTS_ENABLE
          valueFrom:
            configMapKeyRef:
              key: LIBRENMS_CRON_ALERTS_ENABLE
              name: app-librenms-env
        - name: LIBRENMS_CRON_BILLING_CALCULATE_ENABLE
          valueFrom:
            configMapKeyRef:
              key: LIBRENMS_CRON_BILLING_CALCULATE_ENABLE
              name: app-librenms-env
        - name: LIBRENMS_CRON_BILLING_ENABLE
          valueFrom:
            configMapKeyRef:
              key: LIBRENMS_CRON_BILLING_ENABLE
              name: app-librenms-env
        - name: LIBRENMS_CRON_CHECK_SERVICES_ENABLE
          valueFrom:
            configMapKeyRef:
              key: LIBRENMS_CRON_CHECK_SERVICES_ENABLE
              name: app-librenms-env
        - name: LIBRENMS_CRON_DAILY_ENABLE
          valueFrom:
            configMapKeyRef:
              key: LIBRENMS_CRON_DAILY_ENABLE
              name: app-librenms-env
        - name: LIBRENMS_CRON_DISCOVERY_ENABLE
          valueFrom:
            configMapKeyRef:
              key: LIBRENMS_CRON_DISCOVERY_ENABLE
              name: app-librenms-env
        - name: LIBRENMS_CRON_POLLER_ENABLE
          valueFrom:
            configMapKeyRef:
              key: LIBRENMS_CRON_POLLER_ENABLE
              name: app-librenms-env
        - name: LIBRENMS_POLLER_INTERVAL
          valueFrom:
            configMapKeyRef:
              key: LIBRENMS_POLLER_INTERVAL
              name: app-librenms-env
        - name: LIBRENMS_POLLER_THREADS
          valueFrom:
            configMapKeyRef:
              key: LIBRENMS_POLLER_THREADS
              name: app-librenms-env
        - name: LIBRENMS_SNMP_COMMUNITY
          valueFrom:
            configMapKeyRef:
              key: LIBRENMS_SNMP_COMMUNITY
              name: app-librenms-env
        - name: MEMCACHED_HOST
          valueFrom:
            configMapKeyRef:
              key: MEMCACHED_HOST
              name: app-librenms-env
        - name: MEMCACHED_PORT
          valueFrom:
            configMapKeyRef:
              key: MEMCACHED_PORT
              name: app-librenms-env
        - name: MEMORY_LIMIT
          valueFrom:
            configMapKeyRef:
              key: MEMORY_LIMIT
              name: app-librenms-env
        - name: OPCACHE_MEM_SIZE
          valueFrom:
            configMapKeyRef:
              key: OPCACHE_MEM_SIZE
              name: app-librenms-env
        - name: PGID
        - name: PUID
        - name: RRDCACHED_HOST
          valueFrom:
            configMapKeyRef:
              key: RRDCACHED_HOST
              name: app-librenms-env
        - name: RRDCACHED_PORT
          valueFrom:
            configMapKeyRef:
              key: RRDCACHED_PORT
              name: app-librenms-env
        - name: TZ
        - name: UPLOAD_MAX_SIZE
          valueFrom:
            configMapKeyRef:
              key: UPLOAD_MAX_SIZE
              name: app-librenms-env
        image: librenms/librenms:latest
        name: app
        resources: {}
        volumeMounts:
        - mountPath: /data
          name: app-claim0
      restartPolicy: Always
      volumes:
      - name: app-claim0
        persistentVolumeClaim:
          claimName: app-claim0
status: {}
